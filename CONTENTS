This is a package to build robots for wikipedia. Some example robots are 
included. This is fairly nl:-centered, but if something doesn't work for your
language wikipedia, just send a bug report and we'll take a look.

=======================================================================
PLEASE DO NOT PLAY WITH THIS PACKAGE. These programs can actually
modify the live wikipedia on the net, and proper wiki-etiquette should
be followed before running it on any of the wikipedia sites.
=======================================================================
The contents of the package are:

LICENSE : a reference to the Python Software Foundation license
autoredir.py : Make redirect pages for capitalized months like [[1 Januari]]
backref.py : List all pages for which nl:->xx: does not correspond to
                   xx:->nl:. This is obsolescent now that treelang has a 
                   "-backref" command line parameter.
extract_names.py : A program to make a list of 480 pagenames based on a html 
                   file that is the result of a Special:Allpages request.
getlang.py : Get interwiki links for years AD
parsepopular.py : Make statistics based on 2 html dumps of most popular
                  pages.
test.py : Misc testing, now configured to test whether you are logged in.
treelang_all.py : A script that runs treelang.py for each of 
                  the pages in the NL: wikipedia. Might need minor changes
                  to work in your environment
treelang.py : The core of the general interwiki robot.
wikipedia.py : The wikipedia library
yearlayout.py : An old robot used to change the layout of all nl: year pages.
login.py : Log in to an account on your "home" wikipedia. THIS WILL SHOW
           YOUR PASSWORD ON SCREEN! To log out, throw away the login.data
           file that is created. You can only log in to one wikipedia at a time,
           and it should be the one mentioned in username.dat.

backref.py understands various command-line arguments:
    xx: (including the colon) check links to and from xx: instead of 
        all languages.
    -one : check named page only
    -file : check pages in named file
    -start : check all pages starting from named page

treelang.py understands various command-line arguments:
    -force: do not ask permission to make changes
    -always: make changes even when a single byte is changed in the page,
             not only when one of the links has a significant change.
    -same: try to translate the page to other languages by testing whether
           a page with the same name exists on each of the other known 
           wikipedias
    -hint: used as -hint:de:Anweisung to give the robot a hint where to
           start looking for translations
    -name: similar to -same, but UPPERCASE the last name for eo:
    -untranslated: only run on untranslated pages, and interactively ask
                   for a translation hints on such pages.
    -confirm: ask for confirmation in all cases. Without this argument, 
              additions and unambiguous modifications are made without
              confirmation.
    -autonomous: run automatically, do not ask any questions. If a question
                 to an operator is needed, write the name of the page
                 to autonomous_problems.dat and terminate.
    -backref: check for references between the foreign pages as well, list 
              all those that are missing as WARNINGs.

     All other arguments are words that make up the page name.

solve_disambiguation.py:
     Can be used to disambiguate pages from the command line. Specify
     the disambiguation page on the command line. The program will
     pick up the page, and look for all alternative links, and show
     them with a number adjacent to them. It will then automatically
     loop over all pages referring to the disambiguation page, and
     show 30 characters on each side of the reference to help you make
     the decision between the alternatives. It will ask you to type
     the number of the appropriate replacement, and perform the change
     robotically.

     Options:
       -pos:XXXX adds XXXX as an alternative disambiguation

       -just only use the alternatives given on the command line, do not 
             read the page for other possibilities

     To complete a move of a page, one can use:

       python solve_disambiguation.py -just -pos:New%20Name Old%20Name

To run any of the programs, you need a file named 'username.dat' in
your current directory. It has two lines: The first line is your real
name; this will be used to identify you when the robot is making
changes. The second line is normally 2 characters: the code of your
home wikipedia. If the second line is missing, your home wikipedia is
assumed to be 'nl'. It may take a little or a lot to make the programs
run on non-nl: wikipedias. 
